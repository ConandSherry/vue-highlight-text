{"version":3,"file":"directive.min.js","sources":["../src/components/HighlightText.js"],"sourcesContent":["const toStyleString = require('to-style').string\r\n\r\nlet originalContent = undefined\r\nconst defaultStyle = {\r\n  color: '#00C1E8'\r\n}\r\n\r\n\r\nconst getFlags = function (sensitive) {\r\n  let flag = 'g'\r\n  flag = !sensitive ? flag + 'i' : flag\r\n  return flag\r\n}\r\n\r\nconst escapeRegExp = function (str) {\r\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')\r\n}\r\n\r\nconst highlightSeach = function (message, keyword, flags, styleString) {  \r\n  const match = new RegExp(`(${escapeRegExp(keyword)})`,flags)\r\n  if (match.test(message)) {\r\n    return message.replace(match, `<span ${styleString}>\\$&</span>`)\r\n  }\r\n  return message\r\n}\r\n\r\nconst checkStyle = (overWriteStyle) => !!overWriteStyle && JSON.stringify(overWriteStyle) !== '{}'\r\nconst copyObj = (obj) => JSON.parse(JSON.stringify(obj))\r\n\r\nexport default {\r\n  bind(el, binding) {\r\n    originalContent = el.innerHTML\r\n    const { value: {keyword, sensitive, overWriteStyle} } = binding\r\n    \r\n    if (keyword && keyword == '') {\r\n      el.innerHTML = originalContent\r\n      return\r\n    }\r\n\r\n    let newStyle = copyObj(defaultStyle)\r\n    let styleString = ''\r\n\r\n    if (checkStyle(overWriteStyle)) {\r\n      newStyle = Object.assign(defaultStyle, overWriteStyle)\r\n    }\r\n\r\n    styleString = `style=\"${toStyleString(newStyle)}\"`\r\n    let newSensitive = sensitive === undefined ? true : sensitive\r\n    el.innerHTML = highlightSeach(originalContent, keyword, getFlags(newSensitive), styleString)\r\n  },\r\n  update(el, binding) {\r\n    const { value: {keyword, sensitive, overWriteStyle} } = binding\r\n\r\n    if (keyword && keyword == '') {\r\n      el.innerHTML = originalContent\r\n      return\r\n    }\r\n\r\n    let newStyle = copyObj(defaultStyle)\r\n    let styleString = ''\r\n\r\n    if (checkStyle(overWriteStyle)) {\r\n      newStyle = Object.assign(defaultStyle, overWriteStyle)\r\n    }\r\n\r\n    styleString = `style=\"${toStyleString(newStyle)}\"`\r\n    let newSensitive = sensitive === undefined ? true : sensitive\r\n    el.innerHTML = highlightSeach(originalContent, keyword, getFlags(newSensitive), styleString)\r\n  },\r\n  unbind(el) {\r\n    el.innerHTML = originalContent\r\n  }\r\n}\r\n"],"names":["toStyleString","require","string","originalContent","undefined","defaultStyle","getFlags","sensitive","flag","highlightSeach","message","keyword","flags","styleString","match","RegExp","replace","test","checkStyle","overWriteStyle","JSON","stringify","copyObj","obj","parse","el","binding","innerHTML","value","newStyle","Object","assign","newSensitive"],"mappings":";;;;;4LAAA,IAAMA,EAAgBC,QAAQ,YAAYC,OAEtCC,OAAkBC,EAChBC,SACG,WAIHC,EAAW,SAAUC,OACrBC,EAAO,aACHD,EAAyBC,EAAbA,EAAO,KAQvBC,EAAiB,SAAUC,EAASC,EAASC,EAAOC,OAClDC,EAAQ,IAAIC,kBAAwBJ,EAJ/BK,QAAQ,sCAAuC,aAIJJ,UAClDE,EAAMG,KAAKP,GACNA,EAAQM,QAAQF,kBAAgBD,iBAElCH,GAGHQ,EAAa,SAACC,WAAqBA,GAAqD,OAAnCC,KAAKC,UAAUF,IACpEG,EAAU,SAACC,UAAQH,KAAKI,MAAMJ,KAAKC,UAAUE,0BAG5CE,EAAIC,KACWD,EAAGE,gBACmCD,EAAhDE,MAAQjB,IAAAA,QAASJ,IAAAA,UAAWY,IAAAA,kBAEhCR,GAAsB,IAAXA,IACVgB,UAAYxB,WAKbU,EADAgB,EAAWP,EAAQjB,GAGnBa,EAAWC,OACFW,OAAOC,OAAO1B,EAAcc,uBAGjBnB,EAAc6B,YAClCG,OAA6B5B,IAAdG,GAAiCA,IACjDoB,UAAYlB,EAAeN,EAAiBQ,EAASL,EAAS0B,GAAenB,qBAE3EY,EAAIC,SAC+CA,EAAhDE,MAAQjB,IAAAA,QAASJ,IAAAA,UAAWY,IAAAA,kBAEhCR,GAAsB,IAAXA,IACVgB,UAAYxB,WAKbU,EADAgB,EAAWP,EAAQjB,GAGnBa,EAAWC,OACFW,OAAOC,OAAO1B,EAAcc,uBAGjBnB,EAAc6B,YAClCG,OAA6B5B,IAAdG,GAAiCA,IACjDoB,UAAYlB,EAAeN,EAAiBQ,EAASL,EAAS0B,GAAenB,qBAE3EY,KACFE,UAAYxB"}